spring:
  datasource:
    hikari:
      connection-test-query: SELECT 1
      connection-timeout: 3000
      maximum-pool-size: 10
      max-lifetime: 1800000
      minimum-idle: 1
    url: ${una.database.url}
    driverClassName: ${una.database.driverClass}
    username: ${una.database.username}
    password: ${una.database.password}
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    open-in-view: false # Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.
    hibernate:
      ddl-auto: none
  pid:
    file: ${app.home}/application.pid # Location of the PID file to write (if ApplicationPidFileWriter is used).
    fail-on-write-error: false # Fails if ApplicationPidFileWriter is used but it cannot write the PID file.
logging:
  config: ${log.config.path}

app:
  home: ./ # 应用根目录
  encoding: ${una.encoding}
  timeZoneOffset: ${una.timeZoneOffset} # 时区
  stdout:
    printToConsole: ${stdout.printToConsole}
  request: 
    out:
      uuid: ${una.request.out.uuid} #是否需要把uuid加入到MDC中
    head:
      req-uuid-key: ${una.request.head.req-uuid-key} # uuid是否已经在请求头中存在，如果存在则使用该头的key，该功能主要适配后端的微服务
      user-id-key: ${una.request.head.user-id-key}
      company-id-key: ${una.request.head.company-id-key}
      perm-id-key: ${una.request.head.perm-id-key}
  security:
    auth-header: ${una.security.auth-header}
  special-id:
    not-include-company-id: not-include-company
    superuser-add-data: superuser-add-data
  running-mode: normal

system-config:
  new-password:
    length: 8
    letters: true
    digitals: true
    case-sensitive: true 
    non-alphanumeric: true
    # encode: bcrypt
  user:
    avatar: # upload/download default configuration for avatar file
      prefix: system-config.user.avatar
      filenameLength: 128
      fileLength: 2097152 # 2 * 1024 * 1024 
      storeType: file # sftp/ftp/file
      username:
      password:
      folder: ${app.home}/avatar
      ip: 
      port: 

server:
  port: ${port}
  ssl:
    enabled: ${ssl.enabled}
    key-alias: ${ssl.key-alias}
    key-store: ${ssl.key-store}
    key-store-password: ${ssl.key-store-password}
    key-store-type: PKCS12
    clinet-auth: need
