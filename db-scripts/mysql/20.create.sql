CREATE TABLE IF NOT EXISTS S_PW_POLICY (
  ID VARCHAR(64) NOT NULL,
  LABEL VARCHAR(64),
  DESCRIPTION VARCHAR(1024),
  LETTERS VARCHAR(8) DEFAULT 'N',
  CASE_SENSITIVE VARCHAR(8) DEFAULT 'N',
  DIGITALS VARCHAR(8) DEFAULT 'N',
  NON_ALPHANUMERIC VARCHAR(8) DEFAULT 'N',
  LENGTH INT DEFAULT 0,
  MAXIMUM_AGE INT DEFAULT 0,
  REPEAT_COUNT INT DEFAULT 0,
  TRIES_COUNT INT DEFAULT 0,
  CREATED_USER_ID VARCHAR(64),
  CREATED_DATE TIMESTAMP,
  UPDATED_USER_ID VARCHAR(64),
  UPDATED_DATE TIMESTAMP,
  CONSTRAINT S_PW_POLICY_PK PRIMARY KEY(ID)
);

CREATE TABLE IF NOT EXISTS S_CP_RECORD (
  ID VARCHAR(64) NOT NULL,
  USERNAME VARCHAR(64) NOT NULL,
  PASSWORD VARCHAR(256) NOT NULL,
  CHANGED_DATE TIMESTAMP,
  CONSTRAINT S_CP_RECORD_PK PRIMARY KEY(ID),
  INDEX S_CP_RECORD_IX(USERNAME)
);

CREATE TABLE IF NOT EXISTS S_COMPANY (
  ID VARCHAR(64) NOT NULL,
  NAME VARCHAR(512) NOT NULL,
  SHORT_NAME VARCHAR(128),
  LEGAL_PERSON VARCHAR(128),
  ADDRESS VARCHAR(128),
  REMARK VARCHAR(512),
  PW_POLICY_ID VARCHAR(64),
  STATUS VARCHAR(8) DEFAULT 'E',
  CREATED_USER_ID VARCHAR(64),
  CREATED_DATE TIMESTAMP,
  UPDATED_USER_ID VARCHAR(64),
  UPDATED_DATE TIMESTAMP,
  CONSTRAINT S_COMPANY_PK PRIMARY KEY(ID),
  UNIQUE S_COMPANY_NAME_UX(NAME),
  UNIQUE S_COMPANY_SHORT_NAME_UX(SHORT_NAME)
);

CREATE TABLE IF NOT EXISTS S_USER (
  ID VARCHAR(64) NOT NULL,
  COMPANY_ID VARCHAR(64),
  USERNAME VARCHAR(64) NOT NULL,
  PASSWORD VARCHAR(256) NOT NULL,
  ACCOUNT_NON_EXPIRED VARCHAR(8) DEFAULT 'N',
  ACCOUNT_NON_LOCKED VARCHAR(8) DEFAULT 'N',
  CREDENTIALS_NON_EXPIRED VARCHAR(8) DEFAULT 'N',
  DEFAULT_GROUP_ID VARCHAR(64),
  LAST_LOGIN_DATE TIMESTAMP,
  LAST_CHANGE_PW_DATE TIMESTAMP,
  FAILURE_COUNT INT DEFAULT 0,
  CREATED_USER_ID VARCHAR(64),
  CREATED_DATE TIMESTAMP,
  UPDATED_USER_ID VARCHAR(64),
  UPDATED_DATE TIMESTAMP,
  CONSTRAINT S_USER_PK PRIMARY KEY(ID),
  INDEX S_USER_COMPANY_IX(COMPANY_ID),
  UNIQUE S_USER_NAME_UX(USERNAME)
);

CREATE TABLE IF NOT EXISTS S_USER_GROUP (
  ID VARCHAR(64) NOT NULL,
  USER_ID VARCHAR(64) NOT NULL,
  GROUP_ID VARCHAR(64) NOT NULL,
  CREATED_USER_ID VARCHAR(64),
  CREATED_DATE TIMESTAMP,
  CONSTRAINT S_USER_GROUP_PK PRIMARY KEY(ID),
  UNIQUE S_USER_GROUP_UX(USER_ID, GROUP_ID),
  INDEX S_USER_GROUP_USER_IX(USER_ID),
  INDEX S_USER_GROUP_GROUP_IX(GROUP_ID)
);

CREATE TABLE IF NOT EXISTS S_USER_ROLE (
  ID VARCHAR(64) NOT NULL,
  USER_ID VARCHAR(64) NOT NULL,
  ROLE_ID VARCHAR(64) NOT NULL,
  CREATED_USER_ID VARCHAR(64),
  CREATED_DATE TIMESTAMP,
  CONSTRAINT S_USER_ROLE_PK PRIMARY KEY(ID),
  UNIQUE S_USER_ROLE_UX(USER_ID, ROLE_ID),
  INDEX S_USER_ROLE_USER_IX(USER_ID),
  INDEX S_USER_ROLE_ROLE_IX(ROLE_ID)
);

CREATE TABLE IF NOT EXISTS S_GROUP (
  ID VARCHAR(64) NOT NULL,
  COMPANY_ID VARCHAR(64),
  PARENT_ID VARCHAR(64),
  NAME VARCHAR(64) NOT NULL,
  STATUS VARCHAR(8) DEFAULT 'E',
  REMARK VARCHAR(512),
  CREATED_USER_ID VARCHAR(64),
  CREATED_DATE TIMESTAMP,
  UPDATED_USER_ID VARCHAR(64),
  UPDATED_DATE TIMESTAMP,
  CONSTRAINT S_GROUP_PK PRIMARY KEY(ID),
  UNIQUE S_GROUP_NAME_UX(COMPANY_ID, NAME),
  INDEX S_GROUP_COMPANY_IX(COMPANY_ID)
);

CREATE TABLE IF NOT EXISTS S_GROUP_ROLE (
  ID VARCHAR(64) NOT NULL,
  GROUP_ID VARCHAR(64) NOT NULL,
  ROLE_ID VARCHAR(64) NOT NULL,
  CREATED_USER_ID VARCHAR(64),
  CREATED_DATE TIMESTAMP,
  CONSTRAINT S_GROUP_ROLE_PK PRIMARY KEY(ID),
  UNIQUE S_GROUP_ROLE_UX(GROUP_ID, ROLE_ID),
  INDEX S_GROUP_ROLE_GROUP_IX(GROUP_ID),
  INDEX S_GROUP_ROLE_ROLE_IX(ROLE_ID)
);

CREATE TABLE IF NOT EXISTS S_ROLE (
  ID VARCHAR(64) NOT NULL,
  COMPANY_ID VARCHAR(64),
  AUTHORITY VARCHAR(64) NOT NULL,
  STATUS VARCHAR(8) DEFAULT 'E',
  REMARK VARCHAR(512),
  CREATED_USER_ID VARCHAR(64),
  CREATED_DATE TIMESTAMP,
  UPDATED_USER_ID VARCHAR(64),
  UPDATED_DATE TIMESTAMP,
  CONSTRAINT S_ROLE_PK PRIMARY KEY(ID),
  UNIQUE S_ROLE_NAME_UX(COMPANY_ID, AUTHORITY),
  INDEX S_ROLE_COMPANY_IX(COMPANY_ID)
);

CREATE TABLE IF NOT EXISTS S_USER_PROFILE (
  ID VARCHAR(64) NOT NULL,
  USER_ID VARCHAR(64) NOT NULL,
  REAL_NAME VARCHAR(64),
  PHONE VARCHAR(512),
  EMAIL VARCHAR(128),
  AVATAR VARCHAR(128),
  AVATAR_TYPE VARCHAR(32),
  CREATED_USER_ID VARCHAR(64),
  CREATED_DATE TIMESTAMP,
  UPDATED_USER_ID VARCHAR(64),
  UPDATED_DATE TIMESTAMP,
  CONSTRAINT S_USER_PROFILE_PK PRIMARY KEY(ID),
  UNIQUE S_USER_PROFILE_UX(USER_ID)
);

CREATE TABLE IF NOT EXISTS S_ROLE_PERM (
  ID VARCHAR(64) NOT NULL,
  ROLE_ID VARCHAR(64) NOT NULL,
  PERMISSIONS_ID VARCHAR(64) NOT NULL,
  CREATED_USER_ID VARCHAR(64),
  CREATED_DATE TIMESTAMP,
  CONSTRAINT S_ROLE_PERM_PK PRIMARY KEY(ID),
  UNIQUE S_ROLE_PERM_UX(ROLE_ID, PERMISSIONS_ID),
  INDEX S_ROLE_PERM_ROLE_IX(ROLE_ID),
  INDEX S_ROLE_PERM_PERM_IX(PERMISSIONS_ID)
);

CREATE TABLE IF NOT EXISTS S_PERMISSIONS (
  ID VARCHAR(64) NOT NULL,
  NAME VARCHAR(64) NOT NULL,
  STATUS VARCHAR(8) DEFAULT 'E',
  REMARK VARCHAR(512),
  CREATED_USER_ID VARCHAR(64),
  CREATED_DATE TIMESTAMP,
  UPDATED_USER_ID VARCHAR(64),
  UPDATED_DATE TIMESTAMP,
  CONSTRAINT S_PERMISSIONS_PK PRIMARY KEY(ID)
);

CREATE TABLE IF NOT EXISTS S_MENU (
  ID VARCHAR(64) NOT NULL,
  NAME VARCHAR(64) NOT NULL,
  ICON VARCHAR(128),
  SORT INT DEFAULT 0,
  FRONT_END_URI VARCHAR(64) NOT NULL,
  PARENT_ID VARCHAR(64),
  PERMISSIONS_ID VARCHAR(64),
  STATUS VARCHAR(8) DEFAULT 'E',
  REMARK VARCHAR(512),
  CREATED_USER_ID VARCHAR(64),
  CREATED_DATE TIMESTAMP,
  CONSTRAINT S_MENU_PK PRIMARY KEY(ID),
  UNIQUE S_MENU_UX(FRONT_END_URI),
  INDEX S_MENU_IX(PERMISSIONS_ID)
);
 
CREATE TABLE IF NOT EXISTS S_URL_PERM (
  ID VARCHAR(64) NOT NULL,
  NAME VARCHAR(64) NOT NULL,
  URI VARCHAR(128) NOT NULL,
  PERMISSIONS_ID VARCHAR(64),
  SORT INT DEFAULT 0,
  STATUS VARCHAR(8) DEFAULT 'E',
  REMARK VARCHAR(512),
  CREATED_USER_ID VARCHAR(64),
  CREATED_DATE TIMESTAMP,
  CONSTRAINT S_URL_PERM_PK PRIMARY KEY(ID),
  INDEX S_URL_PERM_IX(PERMISSIONS_ID)
);

CREATE TABLE IF NOT EXISTS S_CONF (
  ID VARCHAR(64) NOT NULL,
  COMPANY_ID VARCHAR(64) NOT NULL,
  NAME VARCHAR(128),
  CONF_KEY VARCHAR(128) NOT NULL,
  CONF_VALUE VARCHAR(2048),
  VALUE_TYPE VARCHAR(64),
  STATUS VARCHAR(8) DEFAULT 'E',
  REMARK VARCHAR(512),
  CREATED_USER_ID VARCHAR(64),
  CREATED_DATE TIMESTAMP,
  CONSTRAINT S_CONF_PK PRIMARY KEY(ID),
  UNIQUE S_CONF_UX(COMPANY_ID, CONF_KEY),
  INDEX S_CONF_IX(COMPANY_ID)
);